{"ast":null,"code":"var _jsxFileName = \"/home/pax/Desktop/ReactProjects/color-guessing-game/src/components/ColorButton.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport buttonStyle from './ColorButton.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorButton(props) {\n  _s();\n\n  let lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\n  let lotteryResult = Math.floor(Math.random() * 7);\n  console.log(lotteryResult);\n  let corre;\n  console.log(lotteryArray[2]);\n  const [color, setColor] = useState(randomColorGenerator);\n\n  function randomColorGenerator() {\n    let red = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the red.\n\n    let green = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the green.\n\n    let blue = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the blue.\n\n    return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"; // Returning the whole new rgb(r,g,b) string.\n  }\n\n  function myHandler() {\n    console.log(props.name);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: buttonStyle.btn,\n    onClick: myHandler,\n    style: {\n      'backgroundColor': color\n    },\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorButton, \"WXOtOXPAk0ubhMx/Kp0E0ljhXIc=\");\n\n_c = ColorButton;\nexport default ColorButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorButton\");","map":{"version":3,"sources":["/home/pax/Desktop/ReactProjects/color-guessing-game/src/components/ColorButton.js"],"names":["useState","buttonStyle","ColorButton","props","lotteryArray","lotteryResult","Math","floor","random","console","log","corre","color","setColor","randomColorGenerator","red","green","blue","myHandler","name","btn"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,MAAIC,YAAY,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB,EAA6B,MAA7B,EAAoC,MAApC,CAAnB;AAEA,MAAIC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AAEA,MAAIM,KAAJ;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAAC,CAAD,CAAxB;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACc,oBAAD,CAAlC;;AAEA,WAASA,oBAAT,GAAgC;AAC5B,QAAIC,GAAG,GAAGT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAV,CAD4B,CACuC;;AACnE,QAAIQ,KAAK,GAAGV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ,CAF4B,CAEuC;;AACnE,QAAIS,IAAI,GAAGX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAX,CAH4B,CAGuC;;AAEnE,WAAO,SAASO,GAAT,GAAe,IAAf,GAAsBC,KAAtB,GAA8B,IAA9B,GAAqCC,IAArC,GAA4C,GAAnD,CAL4B,CAKuC;AACtE;;AAED,WAASC,SAAT,GAAqB;AACjBT,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACgB,IAAlB;AACH;;AAED,sBACI;AAAQ,IAAA,SAAS,EAAElB,WAAW,CAACmB,GAA/B;AAAoC,IAAA,OAAO,EAAEF,SAA7C;AAAwD,IAAA,KAAK,EAAE;AAAE,yBAAmBN;AAArB,KAA/D;AAAA,cAA8FT,KAAK,CAACgB;AAApG;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA5BQjB,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\n\nimport buttonStyle from './ColorButton.module.css';\n\nfunction ColorButton(props) {\n\n    let lotteryArray = ['btn1','btn2','btn3','btn4','btn5','btn6'];\n    \n    let lotteryResult = Math.floor(Math.random() * 7);\n\n    console.log(lotteryResult);\n\n    let corre\n    \n    console.log(lotteryArray[2]);\n    const [color, setColor] = useState(randomColorGenerator);\n\n    function randomColorGenerator() {\n        let red = Math.floor(Math.random() * 256);                         // Setting a random value (0-255) for the red.\n        let green = Math.floor(Math.random() * 256);                       // Setting a random value (0-255) for the green.\n        let blue = Math.floor(Math.random() * 256);                        // Setting a random value (0-255) for the blue.\n\n        return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";            // Returning the whole new rgb(r,g,b) string.\n    }\n\n    function myHandler() {\n        console.log(props.name);\n    }\n\n    return (\n        <button className={buttonStyle.btn} onClick={myHandler} style={{ 'backgroundColor': color }}>{props.name}</button>\n    );\n}\n\nexport default ColorButton;"]},"metadata":{},"sourceType":"module"}