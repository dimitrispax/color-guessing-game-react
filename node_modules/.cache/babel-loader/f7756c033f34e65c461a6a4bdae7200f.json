{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\";\nimport { useState } from 'react';\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  // props.messageContainer(messageButtonData);\n  // props.playAgainContainer(playAgainButtonData);\n  // props.titleColorContainer(titleColorButtonData);\n  // console.log(titleColorButtonData);\n  // return (\n  //     <div className={containerStyle.mainContainer}>\n  //         <div className={containerStyle.upperRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn1\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn2\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn3\"\n  //             />\n  //         </div>\n  //         <div className={containerStyle.lowerRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn4\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn5\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn6\"\n  //             />\n  //         </div>\n  //     </div>\n  // );\n  const clickHandler = (color, visibility) => {\n    if (color === props.correctBtn) {\n      console.log(\"Egine!\");\n    } else {\n      console.log(\"Den egine!\");\n      console.log(visibility);\n      visibility = 'hidden';\n      console.log(visibility);\n      return visibility;\n    }\n  }; // const onClick = event => {\n  //     console.log(event.target.style);\n  // }\n\n\n  /*#__PURE__*/\n  _jsxDEV(_Fragment, {\n    children: [\"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: containerStyle.btn,\n          onClick: () => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visibility),\n          style: {\n            backgroundColor: `${props.colorsArray[rowKey][key].color}`,\n            'visibility': props.colorsArray[rowKey][key].visibility\n          }\n        }, index2, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }, this), \")\"]\n  }, void 0, true);\n}\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","ColorButton","containerStyle","ColorsContainer","props","clickHandler","color","visibility","correctBtn","console","log","display","justifyContent","Object","keys","colorsArray","rowKey","map","key","index2","btn","backgroundColor"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxC,QAAID,KAAK,KAAKF,KAAK,CAACI,UAApB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,KAFD,MAEO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAA,MAAAA,UAAU,GAAG,QAAb;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,aAAOA,UAAP;AACH;AACJ,GAVD,CArE4B,CAiF5B;AACA;AACA;;;AAEA;AAAA;AAAA,wCAGgB;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACW,WAAN,CAAkBC,MAAlB,CAAZ,EAAuCC,GAAvC,CAA2C,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACzD,4BACI;AACI,UAAA,SAAS,EAAEjB,cAAc,CAACkB,GAD9B;AAEI,UAAA,OAAO,EAAE,MAAMf,YAAY,CAACD,KAAK,CAACW,WAAN,CAAkBC,MAAlB,EAA0BE,GAA1B,EAA+BZ,KAAhC,EAAuCF,KAAK,CAACW,WAAN,CAAkBC,MAAlB,EAA0BE,GAA1B,EAA+BX,UAAtE,CAF/B;AAGI,UAAA,KAAK,EAAE;AAAEc,YAAAA,eAAe,EAAG,GAAEjB,KAAK,CAACW,WAAN,CAAkBC,MAAlB,EAA0BE,GAA1B,EAA+BZ,KAAM,EAA3D;AAA8D,0BAAcF,KAAK,CAACW,WAAN,CAAkBC,MAAlB,EAA0BE,GAA1B,EAA+BX;AAA3G;AAHX,WAAUY,MAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YAHhB;AAAA;AAuCH;;KA5HQhB,e;AA8HT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n\n    // props.messageContainer(messageButtonData);\n    // props.playAgainContainer(playAgainButtonData);\n    // props.titleColorContainer(titleColorButtonData);\n\n    // console.log(titleColorButtonData);\n\n    // return (\n    //     <div className={containerStyle.mainContainer}>\n    //         <div className={containerStyle.upperRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn1\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn2\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn3\"\n    //             />\n    //         </div>\n    //         <div className={containerStyle.lowerRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn4\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn5\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn6\"\n    //             />\n    //         </div>\n    //     </div>\n    // );\n\n    const clickHandler = (color, visibility) => {\n        if (color === props.correctBtn) {\n            console.log(\"Egine!\");\n        } else {\n            console.log(\"Den egine!\");\n            console.log(visibility);\n            visibility = 'hidden';\n            console.log(visibility);\n            return visibility;\n        }\n    }\n\n    // const onClick = event => {\n    //     console.log(event.target.style);\n    // }\n\n    <>\n\n                return (\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        {Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n                            return (\n                                <div key={index2}\n                                    className={containerStyle.btn}\n                                    onClick={() => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visibility)}\n                                    style={{ backgroundColor: `${props.colorsArray[rowKey][key].color}`, 'visibility': props.colorsArray[rowKey][key].visibility }}>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n          \n        \n\n        {/* {\n\n                Object.keys(props.colorsArray).map((rowKey, index1) => {\n                    console.log(\"rowKey: \" + props.colorsArray[rowKey]);\n                    return (\n                        <div key={index1} style={{ display: 'flex', justifyContent: 'center' }}>\n                            {Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n                                return (\n                                    <div key={index2}\n                                        className={containerStyle.btn}\n                                        onClick={() => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visibility)}\n                                        style={{ backgroundColor: `${props.colorsArray[rowKey][key].color}`, 'visibility': props.colorsArray[rowKey][key].visibility }}>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })\n            } */}\n    </>\n\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}