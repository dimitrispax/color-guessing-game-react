{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorSquare.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport squareStyle from './ColorSquare.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorSquare(props) {\n  _s();\n\n  const [visibility, setVisibility] = useState('visible');\n\n  function myHandler() {\n    if (props.color === color) {\n      console.log(props.color);\n      console.log(color);\n      props.titleColorButton(color);\n      props.messageButton(\"CORRECT!\");\n      props.playAgainButton(\"PLAY AGAIN\");\n    } else {\n      setVisibility('hidden');\n      props.messageButton(\"WRONG, TRY AGAIN!\");\n      props.playAgainButton(\"NEW COLORS\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerStyle.btn,\n    onClick: () => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility),\n    style: {\n      backgroundColor: `${props.colorsArray[key].color}`,\n      'visibility': props.colorsArray[key].visibility\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorSquare, \"KahyASRim3cWQgJtkXeKAkzrUjk=\");\n\n_c = ColorSquare;\nexport default ColorSquare;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorSquare\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorSquare.js"],"names":["useState","squareStyle","ColorSquare","props","visibility","setVisibility","myHandler","color","console","log","titleColorButton","messageButton","playAgainButton","containerStyle","btn","clickHandler","colorsArray","key","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,SAAD,CAA5C;;AAEA,WAASM,SAAT,GAAqB;AACjB,QAAIH,KAAK,CAACI,KAAN,KAAgBA,KAApB,EAA2B;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,KAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,MAAAA,KAAK,CAACO,gBAAN,CAAuBH,KAAvB;AACAJ,MAAAA,KAAK,CAACQ,aAAN,CAAoB,UAApB;AACAR,MAAAA,KAAK,CAACS,eAAN,CAAsB,YAAtB;AACH,KAND,MAMO;AACHP,MAAAA,aAAa,CAAC,QAAD,CAAb;AAEAF,MAAAA,KAAK,CAACQ,aAAN,CAAoB,mBAApB;AACAR,MAAAA,KAAK,CAACS,eAAN,CAAsB,YAAtB;AAEH;AACJ;;AAED,sBACI;AACI,IAAA,SAAS,EAAEC,cAAc,CAACC,GAD9B;AAEI,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACZ,KAAK,CAACa,WAAN,CAAkBC,GAAlB,EAAuBV,KAAxB,EAA+BJ,KAAK,CAACa,WAAN,CAAkBC,GAAlB,EAAuBb,UAAtD,CAF/B;AAGI,IAAA,KAAK,EAAE;AAAEc,MAAAA,eAAe,EAAG,GAAEf,KAAK,CAACa,WAAN,CAAkBC,GAAlB,EAAuBV,KAAM,EAAnD;AAAsD,oBAAcJ,KAAK,CAACa,WAAN,CAAkBC,GAAlB,EAAuBb;AAA3F;AAHX;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA3BQF,W;;KAAAA,W;AA6BT,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\n\nimport squareStyle from './ColorSquare.module.css';\n\nfunction ColorSquare(props) {\n\n    const [visibility, setVisibility] = useState('visible');\n\n    function myHandler() {\n        if (props.color === color) {\n            console.log(props.color);\n            console.log(color);\n            props.titleColorButton(color);\n            props.messageButton(\"CORRECT!\");\n            props.playAgainButton(\"PLAY AGAIN\");\n        } else {\n            setVisibility('hidden');\n\n            props.messageButton(\"WRONG, TRY AGAIN!\");\n            props.playAgainButton(\"NEW COLORS\");\n\n        }\n    }\n\n    return (\n        <div \n            className={containerStyle.btn}\n            onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility)}\n            style={{ backgroundColor: `${props.colorsArray[key].color}`, 'visibility': props.colorsArray[key].visibility }}>\n        </div>\n    );\n}\n\nexport default ColorSquare;"]},"metadata":{},"sourceType":"module"}