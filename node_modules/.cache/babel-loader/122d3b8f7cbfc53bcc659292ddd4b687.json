{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\";\nimport { useState } from 'react';\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  console.log('PROPS: ', props);\n\n  const clickHandler = (color, visibility) => {\n    console.log('Square Color in Container: ', color);\n    console.log('Square Visibility in Container: ', visibility);\n    const newClicks = { ...clicks,\n      left: clicks.left + 1\n    };\n    props.setColorsArray(); // console.log(props.colorsArray);\n    // console.log(color);\n    // console.log(visibility);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerStyle.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerStyle.innerContainer,\n      children: Object.keys(props.colorsArray).map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(ColorSquare, {\n          correctBtn: props.correctBtn,\n          onClick: () => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility),\n          backgroundColor: props.makeVisibleAllSquares ? props.correctBtn : props.colorsArray[key].color,\n          setMakeVisibleAllSquares: props.setMakeVisibleAllSquares,\n          makeVisibleAllSquares: props.makeVisibleAllSquares\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","containerStyle","ColorSquare","ColorsContainer","props","console","log","clickHandler","color","visibility","newClicks","clicks","left","setColorsArray","mainContainer","innerContainer","Object","keys","colorsArray","map","key","index","correctBtn","makeVisibleAllSquares","setMakeVisibleAllSquares"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;;AAEA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CE,KAA3C;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDG,UAAhD;AACA,UAAMC,SAAS,GAAG,EACd,GAAGC,MADW;AAEdC,MAAAA,IAAI,EAAED,MAAM,CAACC,IAAP,GAAc;AAFN,KAAlB;AAIRR,IAAAA,KAAK,CAACS,cAAN,GAPgD,CAQxC;AACA;AACA;AACH,GAXD;;AAeJ,sBACI;AAAK,IAAA,SAAS,EAAEZ,cAAc,CAACa,aAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEb,cAAc,CAACc,cAA/B;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYb,KAAK,CAACc,WAAlB,EAA+BC,GAA/B,CAAmC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChD,4BACI,QAAC,WAAD;AACI,UAAA,UAAU,EAAEjB,KAAK,CAACkB,UADtB;AAEI,UAAA,OAAO,EAAE,MAAMf,YAAY,CAACH,KAAK,CAACc,WAAN,CAAkBE,GAAlB,EAAuBZ,KAAxB,EAA+BJ,KAAK,CAACc,WAAN,CAAkBE,GAAlB,EAAuBX,UAAtD,CAF/B;AAGI,UAAA,eAAe,EAAGL,KAAK,CAACmB,qBAAP,GAAgCnB,KAAK,CAACkB,UAAtC,GAAmDlB,KAAK,CAACc,WAAN,CAAkBE,GAAlB,EAAuBZ,KAH/F;AAII,UAAA,wBAAwB,EAAEJ,KAAK,CAACoB,wBAJpC;AAKI,UAAA,qBAAqB,EAAEpB,KAAK,CAACmB;AALjC,WAAkBF,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBC;;KAzCQlB,e;AA2CT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n    console.log('PROPS: ', props)\n\n    const clickHandler = (color, visibility) => {\n        console.log('Square Color in Container: ', color)\n        console.log('Square Visibility in Container: ', visibility)\n        const newClicks = { \n            ...clicks, \n            left: clicks.left + 1 \n          }\nprops.setColorsArray()\n        // console.log(props.colorsArray);\n        // console.log(color);\n        // console.log(visibility);\n    }\n\n\n\nreturn (\n    <div className={containerStyle.mainContainer}>\n        <div className={containerStyle.innerContainer}>\n            {Object.keys(props.colorsArray).map((key, index) => {\n                return (\n                    <ColorSquare key={index}\n                        correctBtn={props.correctBtn}\n                        onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility)}\n                        backgroundColor={(props.makeVisibleAllSquares) ? props.correctBtn : props.colorsArray[key].color}\n                        setMakeVisibleAllSquares={props.setMakeVisibleAllSquares}\n                        makeVisibleAllSquares={props.makeVisibleAllSquares}\n                    />\n                )\n            })}\n        </div>\n    </div>\n)\n\n\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}