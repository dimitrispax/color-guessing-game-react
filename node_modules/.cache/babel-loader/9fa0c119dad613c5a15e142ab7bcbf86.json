{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TitleBar from \"./components/TitleBar\";\nimport ResultBar from \"./components/ResultBar\";\nimport ColorsContainer from \"./components/ColorsContainer\";\nimport titleStyle from './components/TitleBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n  color: color,\n  correctBtn: correctBtn\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nfunction App(props) {\n  _s();\n\n  const [messageContainerData, setMessageContainerData] = useState(\"\");\n  const [playAgainContainerData, setplayAgainContainerData] = useState(\"\");\n  const [titleColorContainerData, setTitleColorContainerData] = useState(\"\");\n  const [playAgainFlagData, setplayAgainFlagData] = useState();\n  let message = messageContainerData;\n  let buttonText = playAgainContainerData;\n  let titleColorApp = titleColorContainerData;\n  let playAgainFlag = playAgainFlagData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"We are using \", process.env.REACT_APP_DATABASE]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TitleBar, {\n      color: props.color,\n      titleColor: titleColorApp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultBar, {\n      message: message,\n      buttonText: buttonText,\n      playAgain: setplayAgainFlagData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorsContainer, {\n      messageContainer: setMessageContainerData,\n      playAgainContainer: setplayAgainContainerData,\n      titleColorContainer: setTitleColorContainerData,\n      color: props.color,\n      correctBtn: props.correctBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"x9qJmGXV+6M3r9pcRaLWQ32nCLU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/App.js"],"names":["useState","TitleBar","ResultBar","ColorsContainer","titleStyle","ReactDOM","render","color","correctBtn","document","getElementById","App","props","messageContainerData","setMessageContainerData","playAgainContainerData","setplayAgainContainerData","titleColorContainerData","setTitleColorContainerData","playAgainFlagData","setplayAgainFlagData","message","buttonText","titleColorApp","playAgainFlag","process","env","REACT_APP_DATABASE"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEAC,QAAQ,CAACC,MAAT,eACE,QAAC,GAAD;AAAK,EAAA,KAAK,EAAEC,KAAZ;AAAmB,EAAA,UAAU,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;;AAKA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDd,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACe,sBAAD,EAAyBC,yBAAzB,IAAsDhB,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACiB,uBAAD,EAA0BC,0BAA1B,IAAwDlB,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACmB,iBAAD,EAAoBC,oBAApB,IAA4CpB,QAAQ,EAA1D;AAEA,MAAIqB,OAAO,GAAGR,oBAAd;AACA,MAAIS,UAAU,GAAGP,sBAAjB;AACA,MAAIQ,aAAa,GAAGN,uBAApB;AACA,MAAIO,aAAa,GAAGL,iBAApB;AAEA,sBACE;AAAA,4BACE;AAAA,kCACgBM,OAAO,CAACC,GAAR,CAAYC,kBAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEf,KAAK,CAACL,KAAvB;AAA8B,MAAA,UAAU,EAAEgB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEF,OAApB;AAA6B,MAAA,UAAU,EAAEC,UAAzC;AAAqD,MAAA,SAAS,EAAEF;AAAhE;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,eAAD;AAAiB,MAAA,gBAAgB,EAAEN,uBAAnC;AAA4D,MAAA,kBAAkB,EAAEE,yBAAhF;AAA2G,MAAA,mBAAmB,EAAEE,0BAAhI;AAA4J,MAAA,KAAK,EAAEN,KAAK,CAACL,KAAzK;AAAgL,MAAA,UAAU,EAAEK,KAAK,CAACJ;AAAlM;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtBQG,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\n\nimport TitleBar from \"./components/TitleBar\";\nimport ResultBar from \"./components/ResultBar\";\nimport ColorsContainer from \"./components/ColorsContainer\";\nimport titleStyle from './components/TitleBar.module.css';\n\nReactDOM.render(\n  <App color={color} correctBtn={correctBtn} />,\n  document.getElementById('root')\n);\n\nfunction App(props) {\n\n  const [messageContainerData, setMessageContainerData] = useState(\"\");\n  const [playAgainContainerData, setplayAgainContainerData] = useState(\"\");\n  const [titleColorContainerData, setTitleColorContainerData] = useState(\"\");\n  const [playAgainFlagData, setplayAgainFlagData] = useState();\n\n  let message = messageContainerData;\n  let buttonText = playAgainContainerData;\n  let titleColorApp = titleColorContainerData;\n  let playAgainFlag = playAgainFlagData;\n\n  return (\n    <div>\n      <h1>\n        We are using {process.env.REACT_APP_DATABASE}\n      </h1>\n      <TitleBar color={props.color} titleColor={titleColorApp} />\n      <ResultBar message={message} buttonText={buttonText} playAgain={setplayAgainFlagData} />\n      <ColorsContainer messageContainer={setMessageContainerData} playAgainContainer={setplayAgainContainerData} titleColorContainer={setTitleColorContainerData} color={props.color} correctBtn={props.correctBtn} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}