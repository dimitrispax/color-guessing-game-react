{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState } from 'react';\nimport './index.css';\nimport App from './App';\nimport playAgainFlag from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet color;\nlet correctBtn;\ninitializeGame();\n\nfunction initializeGame() {\n  color = randomColorGenerator();\n  let lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\n  correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n\n  while (typeof correctBtn == 'undefined') {\n    correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n  }\n}\n\nconsole.log(App); // const [playAgainFlag, setPlayAgainFlag] = useState(false);\n\nfunction randomColorGenerator() {\n  let red = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the red.\n\n  let green = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the green.\n\n  let blue = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the blue.\n\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"; // Returning the whole new rgb(r,g,b) string.\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n  color: color,\n  correctBtn: correctBtn\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/index.js"],"names":["React","ReactDOM","useState","App","playAgainFlag","color","correctBtn","initializeGame","randomColorGenerator","lotteryArray","Math","floor","random","console","log","red","green","blue","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,aAAP,MAA0B,OAA1B;;AAEA,IAAIC,KAAJ;AACA,IAAIC,UAAJ;AAKAC,cAAc;;AAEd,SAASA,cAAT,GAA0B;AACxBF,EAAAA,KAAK,GAAGG,oBAAoB,EAA5B;AACA,MAAIC,YAAY,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CAAnB;AACAH,EAAAA,UAAU,GAAGG,YAAY,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAzB;;AACA,SAAO,OAAON,UAAP,IAAqB,WAA5B,EAAyC;AACvCA,IAAAA,UAAU,GAAGG,YAAY,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAzB;AACD;AACF;;AACDC,OAAO,CAACC,GAAR,CAAYX,GAAZ,E,CAEA;;AAEA,SAASK,oBAAT,GAAgC;AAC9B,MAAIO,GAAG,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAV,CAD8B,CACqC;;AACnE,MAAII,KAAK,GAAGN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ,CAF8B,CAEqC;;AACnE,MAAIK,IAAI,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAX,CAH8B,CAGqC;;AAEnE,SAAO,SAASG,GAAT,GAAe,IAAf,GAAsBC,KAAtB,GAA8B,IAA9B,GAAqCC,IAArC,GAA4C,GAAnD,CAL8B,CAKqC;AACpE;;AAKDhB,QAAQ,CAACiB,MAAT,eACE,QAAC,GAAD;AAAK,EAAA,KAAK,EAAEb,KAAZ;AAAmB,EAAA,UAAU,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,QADF,EAEEa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState } from 'react';\n\nimport './index.css';\nimport App from './App';\nimport playAgainFlag from './App';\n\nlet color;\nlet correctBtn;\n\n\n\n\ninitializeGame();\n\nfunction initializeGame() {\n  color = randomColorGenerator();\n  let lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\n  correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n  while (typeof correctBtn == 'undefined') {\n    correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n  }\n}\nconsole.log(App);\n\n// const [playAgainFlag, setPlayAgainFlag] = useState(false);\n\nfunction randomColorGenerator() {\n  let red = Math.floor(Math.random() * 256);                         // Setting a random value (0-255) for the red.\n  let green = Math.floor(Math.random() * 256);                       // Setting a random value (0-255) for the green.\n  let blue = Math.floor(Math.random() * 256);                        // Setting a random value (0-255) for the blue.\n\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";            // Returning the whole new rgb(r,g,b) string.\n}\n\n\n\n\nReactDOM.render(\n  <App color={color} correctBtn={correctBtn} />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}