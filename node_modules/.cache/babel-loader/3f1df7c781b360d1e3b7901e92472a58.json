{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\";\nimport { useState } from 'react';\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  const clickHandler = (color, id) => {\n    if (color === props.correctBtn) {\n      changeColor();\n    } else {\n      changeVisibility(id);\n    }\n  };\n\n  const changeColor = () => {\n    const tempColorsArray = [...props.colorsArray];\n    tempColorsArray.map(object => {\n      console.log('color: ', object.color);\n      console.log('visibility: ', object.visibility, 'of ', object.id);\n\n      if (object.visibility === 'visible') {\n        object.color = props.correctBtn;\n      }\n    });\n    props.setColorsArray(tempColorsArray);\n  };\n\n  const changeVisibility = id => {\n    const tempColorsArray = [...props.colorsArray];\n    tempColorsArray[id].visibility = 'hidden';\n    props.setColorsArray(tempColorsArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerStyle.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerStyle.innerContainer,\n      children: Object.keys(props.colorsArray).map(key => {\n        return /*#__PURE__*/_jsxDEV(ColorSquare, {\n          correctBtn: props.correctBtn,\n          onClick: () => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility, props.colorsArray[key].id),\n          backgroundColor: props.colorsArray[key].color,\n          visibility: props.colorsArray[key].visibility\n        }, props.colorsArray[key].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","containerStyle","ColorSquare","ColorsContainer","props","clickHandler","color","id","correctBtn","changeColor","changeVisibility","tempColorsArray","colorsArray","map","object","console","log","visibility","setColorsArray","mainContainer","innerContainer","Object","keys","key"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAChC,QAAID,KAAK,KAAKF,KAAK,CAACI,UAApB,EAAgC;AAC5BC,MAAAA,WAAW;AACd,KAFD,MAEO;AACHC,MAAAA,gBAAgB,CAACH,EAAD,CAAhB;AACH;AAEJ,GAPD;;AASA,QAAME,WAAW,GAAG,MAAM;AACtB,UAAME,eAAe,GAAG,CAAC,GAAGP,KAAK,CAACQ,WAAV,CAAxB;AACAD,IAAAA,eAAe,CAACE,GAAhB,CAAoBC,MAAM,IAAI;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAM,CAACR,KAA9B;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAAM,CAACG,UAAnC,EAA+C,KAA/C,EAAsDH,MAAM,CAACP,EAA7D;;AACA,UAAIO,MAAM,CAACG,UAAP,KAAsB,SAA1B,EAAqC;AACjCH,QAAAA,MAAM,CAACR,KAAP,GAAeF,KAAK,CAACI,UAArB;AACH;AAEJ,KAPD;AAQAJ,IAAAA,KAAK,CAACc,cAAN,CAAqBP,eAArB;AACH,GAXD;;AAaA,QAAMD,gBAAgB,GAAIH,EAAD,IAAQ;AAC7B,UAAMI,eAAe,GAAG,CAAC,GAAGP,KAAK,CAACQ,WAAV,CAAxB;AACAD,IAAAA,eAAe,CAACJ,EAAD,CAAf,CAAoBU,UAApB,GAAiC,QAAjC;AACAb,IAAAA,KAAK,CAACc,cAAN,CAAqBP,eAArB;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEV,cAAc,CAACkB,aAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAElB,cAAc,CAACmB,cAA/B;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYlB,KAAK,CAACQ,WAAlB,EAA+BC,GAA/B,CAAoCU,GAAD,IAAS;AACzC,4BACI,QAAC,WAAD;AACI,UAAA,UAAU,EAAEnB,KAAK,CAACI,UADtB;AAEI,UAAA,OAAO,EAAE,MAAMH,YAAY,CAACD,KAAK,CAACQ,WAAN,CAAkBW,GAAlB,EAAuBjB,KAAxB,EAA+BF,KAAK,CAACQ,WAAN,CAAkBW,GAAlB,EAAuBN,UAAtD,EAAkEb,KAAK,CAACQ,WAAN,CAAkBW,GAAlB,EAAuBhB,EAAzF,CAF/B;AAGI,UAAA,eAAe,EAAEH,KAAK,CAACQ,WAAN,CAAkBW,GAAlB,EAAuBjB,KAH5C;AAII,UAAA,UAAU,EAAEF,KAAK,CAACQ,WAAN,CAAkBW,GAAlB,EAAuBN;AAJvC,WAAkBb,KAAK,CAACQ,WAAN,CAAkBW,GAAlB,EAAuBhB,EAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OATA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;KAhDQJ,e;AAkDT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\n\nfunction ColorsContainer(props) {\n\n    const clickHandler = (color, id) => {\n        if (color === props.correctBtn) {\n            changeColor()\n        } else {\n            changeVisibility(id)\n        }\n\n    }\n\n    const changeColor = () => {\n        const tempColorsArray = [...props.colorsArray]\n        tempColorsArray.map(object => {\n            console.log('color: ', object.color)\n            console.log('visibility: ', object.visibility, 'of ', object.id)\n            if (object.visibility === 'visible') {\n                object.color = props.correctBtn\n            }\n\n        })\n        props.setColorsArray(tempColorsArray)\n    }\n\n    const changeVisibility = (id) => {\n        const tempColorsArray = [...props.colorsArray]\n        tempColorsArray[id].visibility = 'hidden';\n        props.setColorsArray(tempColorsArray)\n    }\n\n    return (\n        <div className={containerStyle.mainContainer}>\n            <div className={containerStyle.innerContainer}>\n                {Object.keys(props.colorsArray).map((key) => {\n                    return (\n                        <ColorSquare key={props.colorsArray[key].id}\n                            correctBtn={props.correctBtn}\n                            onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility, props.colorsArray[key].id)}\n                            backgroundColor={props.colorsArray[key].color}\n                            visibility={props.colorsArray[key].visibility}\n                        />\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}