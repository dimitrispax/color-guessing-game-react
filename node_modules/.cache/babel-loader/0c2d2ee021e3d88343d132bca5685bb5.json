{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  _s();\n\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  // props.messageContainer(messageButtonData);\n  // props.playAgainContainer(playAgainButtonData);\n  // props.titleColorContainer(titleColorButtonData);\n  // console.log(titleColorButtonData);\n  // return (\n  //     <div className={containerStyle.mainContainer}>\n  //         <div className={containerStyle.upperRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn1\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn2\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn3\"\n  //             />\n  //         </div>\n  //         <div className={containerStyle.lowerRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn4\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn5\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn6\"\n  //             />\n  //         </div>\n  //     </div>\n  // );\n  const [visibility, setVisibility] = useState('visible');\n\n  const clickHandler = (color, visibility) => {}; // const onClick = event => {\n  //     console.log(event.target.style);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerStyle.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerStyle.innerContainer,\n      children: Object.keys(props.colorsArray).map((key, index2) => {\n        return (\n          /*#__PURE__*/\n          // <div \n          //     className={containerStyle.btn}\n          //     onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility)}\n          //     style={{ backgroundColor: `${props.colorsArray[key].color}`, 'visibility': props.colorsArray[key].visibility }}>\n          // </div>\n          _jsxDEV(ColorSquare, {\n            visibility: visibility,\n            correctBtn: props.correctBtn,\n            backgroundColor: `${props.colorsArray[key].color}`\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n  {\n    /* {\n                Object.keys(props.colorsArray).map((rowKey, index1) => {\n                   console.log(\"rowKey: \" + props.colorsArray[rowKey]);\n                   return (\n                       <div key={index1} style={{ display: 'flex', justifyContent: 'center' }}>\n                           {Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n                               return (\n                                   <div key={index2}\n                                       className={containerStyle.btn}\n                                       onClick={() => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visibility)}\n                                       style={{ backgroundColor: `${props.colorsArray[rowKey][key].color}`, 'visibility': props.colorsArray[rowKey][key].visibility }}>\n                                   </div>\n                               )\n                           })}\n                       </div>\n                   )\n               })\n           } */\n  }\n}\n\n_s(ColorsContainer, \"KahyASRim3cWQgJtkXeKAkzrUjk=\");\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","containerStyle","ColorSquare","ColorsContainer","props","visibility","setVisibility","clickHandler","color","mainContainer","innerContainer","Object","keys","colorsArray","map","key","index2","correctBtn"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,SAAD,CAA5C;;AAEA,QAAMO,YAAY,GAAG,CAACC,KAAD,EAAQH,UAAR,KAAuB,CAG3C,CAHD,CAvE4B,CA4E5B;AACA;AACA;;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEJ,cAAc,CAACQ,aAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAER,cAAc,CAACS,cAA/B;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,WAAlB,EAA+BC,GAA/B,CAAmC,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACjD;AAAA;AACI;AACA;AACA;AACA;AACA;AACA,kBAAC,WAAD;AACI,YAAA,UAAU,EAAEX,UADhB;AAEI,YAAA,UAAU,EAAED,KAAK,CAACa,UAFtB;AAGI,YAAA,eAAe,EAAG,GAAEb,KAAK,CAACS,WAAN,CAAkBE,GAAlB,EAAuBP,KAAM;AAHrD,aAAkBQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AANJ;AAaH,OAdA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBA;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACiB;AAGhB;;GA/HQb,e;;KAAAA,e;AAiIT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n\n    // props.messageContainer(messageButtonData);\n    // props.playAgainContainer(playAgainButtonData);\n    // props.titleColorContainer(titleColorButtonData);\n\n    // console.log(titleColorButtonData);\n\n    // return (\n    //     <div className={containerStyle.mainContainer}>\n    //         <div className={containerStyle.upperRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn1\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn2\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn3\"\n    //             />\n    //         </div>\n    //         <div className={containerStyle.lowerRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn4\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn5\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn6\"\n    //             />\n    //         </div>\n    //     </div>\n    // );\n    \n    const [visibility, setVisibility] = useState('visible');\n\n    const clickHandler = (color, visibility) => {\n\n        \n    }\n\n    // const onClick = event => {\n    //     console.log(event.target.style);\n    // }\n\n    \n\n    return (\n        <div className={containerStyle.mainContainer}>\n            <div className={containerStyle.innerContainer}>\n                {Object.keys(props.colorsArray).map((key, index2) => {\n                    return (\n                        // <div \n                        //     className={containerStyle.btn}\n                        //     onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility)}\n                        //     style={{ backgroundColor: `${props.colorsArray[key].color}`, 'visibility': props.colorsArray[key].visibility }}>\n                        // </div>\n                        <ColorSquare key={index2}\n                            visibility={visibility}\n                            correctBtn={props.correctBtn}\n                            backgroundColor={`${props.colorsArray[key].color}`}\n                        />\n\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n\n\n    {/* {\n\n                Object.keys(props.colorsArray).map((rowKey, index1) => {\n                    console.log(\"rowKey: \" + props.colorsArray[rowKey]);\n                    return (\n                        <div key={index1} style={{ display: 'flex', justifyContent: 'center' }}>\n                            {Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n                                return (\n                                    <div key={index2}\n                                        className={containerStyle.btn}\n                                        onClick={() => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visibility)}\n                                        style={{ backgroundColor: `${props.colorsArray[rowKey][key].color}`, 'visibility': props.colorsArray[rowKey][key].visibility }}>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })\n            } */}\n\n\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}