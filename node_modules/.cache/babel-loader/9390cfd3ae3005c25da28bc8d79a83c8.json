{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\";\nimport { useState } from 'react';\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  console.log('PROPS: ', props);\n\n  const clickHandler = (color, visibility) => {\n    console.log('Square Color in Container: ', props.colorsArray.map(object => object.color = color));\n    console.log('Square Visibility in Container: ', visibility); // const newColorsArray = { \n    //     ...props.colorsArray, \n    //     // color: clicks.left + 1 \n    //   }\n    // props.setColorsArray()\n    // console.log(props.colorsArray);\n    // console.log(color);\n    // console.log(visibility);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerStyle.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerStyle.innerContainer,\n      children: Object.keys(props.colorsArray).map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(ColorSquare, {\n          correctBtn: props.correctBtn,\n          onClick: () => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility),\n          backgroundColor: props.makeVisibleAllSquares ? props.correctBtn : props.colorsArray[key].color,\n          setMakeVisibleAllSquares: props.setMakeVisibleAllSquares,\n          makeVisibleAllSquares: props.makeVisibleAllSquares\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","containerStyle","ColorSquare","ColorsContainer","props","console","log","clickHandler","color","visibility","colorsArray","map","object","mainContainer","innerContainer","Object","keys","key","index","correctBtn","makeVisibleAllSquares","setMakeVisibleAllSquares"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;;AAEA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,KAAK,CAACM,WAAN,CAAkBC,GAAlB,CAAsBC,MAAM,IAAIA,MAAM,CAACJ,KAAP,GAAeA,KAA/C,CAA3C;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDG,UAAhD,EAFwC,CAGxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAER,cAAc,CAACY,aAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEZ,cAAc,CAACa,cAA/B;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYZ,KAAK,CAACM,WAAlB,EAA+BC,GAA/B,CAAmC,CAACM,GAAD,EAAMC,KAAN,KAAgB;AAChD,4BACI,QAAC,WAAD;AACI,UAAA,UAAU,EAAEd,KAAK,CAACe,UADtB;AAEI,UAAA,OAAO,EAAE,MAAMZ,YAAY,CAACH,KAAK,CAACM,WAAN,CAAkBO,GAAlB,EAAuBT,KAAxB,EAA+BJ,KAAK,CAACM,WAAN,CAAkBO,GAAlB,EAAuBR,UAAtD,CAF/B;AAGI,UAAA,eAAe,EAAGL,KAAK,CAACgB,qBAAP,GAAgChB,KAAK,CAACe,UAAtC,GAAmDf,KAAK,CAACM,WAAN,CAAkBO,GAAlB,EAAuBT,KAH/F;AAII,UAAA,wBAAwB,EAAEJ,KAAK,CAACiB,wBAJpC;AAKI,UAAA,qBAAqB,EAAEjB,KAAK,CAACgB;AALjC,WAAkBF,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH,OAVA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KAzCQf,e;AA2CT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n    console.log('PROPS: ', props)\n\n    const clickHandler = (color, visibility) => {\n        console.log('Square Color in Container: ', props.colorsArray.map(object => object.color = color))\n        console.log('Square Visibility in Container: ', visibility)\n        // const newColorsArray = { \n        //     ...props.colorsArray, \n        //     // color: clicks.left + 1 \n        //   }\n        // props.setColorsArray()\n        // console.log(props.colorsArray);\n        // console.log(color);\n        // console.log(visibility);\n    }\n\n\n\n    return (\n        <div className={containerStyle.mainContainer}>\n            <div className={containerStyle.innerContainer}>\n                {Object.keys(props.colorsArray).map((key, index) => {\n                    return (\n                        <ColorSquare key={index}\n                            correctBtn={props.correctBtn}\n                            onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility)}\n                            backgroundColor={(props.makeVisibleAllSquares) ? props.correctBtn : props.colorsArray[key].color}\n                            setMakeVisibleAllSquares={props.setMakeVisibleAllSquares}\n                            makeVisibleAllSquares={props.makeVisibleAllSquares}\n                        />\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}