{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninitializeGame();\nlet color = randomColorGenerator();\nlet lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\nlet correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n\nwhile (typeof correctBtn == 'undefined') {\n  correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n}\n\nfunction randomColorGenerator() {\n  let red = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the red.\n\n  let green = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the green.\n\n  let blue = Math.floor(Math.random() * 256); // Setting a random value (0-255) for the blue.\n\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"; // Returning the whole new rgb(r,g,b) string.\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n  color: color,\n  correctBtn: correctBtn\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/index.js"],"names":["React","ReactDOM","App","initializeGame","color","randomColorGenerator","lotteryArray","correctBtn","Math","floor","random","red","green","blue","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGAC,cAAc;AACd,IAAIC,KAAK,GAAGC,oBAAoB,EAAhC;AACA,IAAIC,YAAY,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CAAnB;AACA,IAAIC,UAAU,GAAGD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAA7B;;AACA,OAAO,OAAOH,UAAP,IAAqB,WAA5B,EAAyC;AACvCA,EAAAA,UAAU,GAAGD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAzB;AACD;;AAED,SAASL,oBAAT,GAAgC;AAC9B,MAAIM,GAAG,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAV,CAD8B,CACqC;;AACnE,MAAIE,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAZ,CAF8B,CAEqC;;AACnE,MAAIG,IAAI,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAX,CAH8B,CAGqC;;AAEnE,SAAO,SAASC,GAAT,GAAe,IAAf,GAAsBC,KAAtB,GAA8B,IAA9B,GAAqCC,IAArC,GAA4C,GAAnD,CAL8B,CAKqC;AACpE;;AAKDZ,QAAQ,CAACa,MAAT,eACE,QAAC,GAAD;AAAK,EAAA,KAAK,EAAEV,KAAZ;AAAmB,EAAA,UAAU,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA,QADF,EAEEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\n\ninitializeGame()\nlet color = randomColorGenerator();\nlet lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\nlet correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\nwhile (typeof correctBtn == 'undefined') {\n  correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n}\n\nfunction randomColorGenerator() {\n  let red = Math.floor(Math.random() * 256);                         // Setting a random value (0-255) for the red.\n  let green = Math.floor(Math.random() * 256);                       // Setting a random value (0-255) for the green.\n  let blue = Math.floor(Math.random() * 256);                        // Setting a random value (0-255) for the blue.\n\n  return \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";            // Returning the whole new rgb(r,g,b) string.\n}\n\n\n\n\nReactDOM.render(\n  <App color={color} correctBtn={correctBtn} />,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}