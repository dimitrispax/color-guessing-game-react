{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\";\nimport { useState } from 'react';\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  const clickHandler = (color, visibility) => {\n    console.log(props.colorsArray);\n    console.log(color);\n    console.log(visibility);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerStyle.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: containerStyle.innerContainer,\n      children: Object.keys(props.colorsArray).map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(ColorSquare, {\n          correctBtn: props.correctBtn,\n          onClick: () => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility),\n          backgroundColor: props.makeVisibleAllSquares ? props.correctBtn : props.colorsArray[key].color,\n          setMakeVisibleAllSquares: props.setMakeVisibleAllSquares,\n          makeVisibleAllSquares: props.makeVisibleAllSquares\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","containerStyle","ColorSquare","ColorsContainer","props","clickHandler","color","visibility","console","log","colorsArray","mainContainer","innerContainer","Object","keys","map","key","index","correctBtn","makeVisibleAllSquares","setMakeVisibleAllSquares"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B;AACA;AACA;AAGA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,WAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH,GAJD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAEN,cAAc,CAACU,aAA/B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEV,cAAc,CAACW,cAA/B;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACM,WAAlB,EAA+BK,GAA/B,CAAmC,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChD,4BACI,QAAC,WAAD;AACI,UAAA,UAAU,EAAEb,KAAK,CAACc,UADtB;AAEI,UAAA,OAAO,EAAE,MAAMb,YAAY,CAACD,KAAK,CAACM,WAAN,CAAkBM,GAAlB,EAAuBV,KAAxB,EAA+BF,KAAK,CAACM,WAAN,CAAkBM,GAAlB,EAAuBT,UAAtD,CAF/B;AAGI,UAAA,eAAe,EAAGH,KAAK,CAACe,qBAAP,GAAgCf,KAAK,CAACc,UAAtC,GAAmDd,KAAK,CAACM,WAAN,CAAkBM,GAAlB,EAAuBV,KAH/F;AAII,UAAA,wBAAwB,EAAEF,KAAK,CAACgB,wBAJpC;AAKI,UAAA,qBAAqB,EAAEhB,KAAK,CAACe;AALjC,WAAkBF,KAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;KAnCQd,e;AAqCT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport containerStyle from './ColorsContainer.module.css';\nimport ColorSquare from './ColorSquare';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n\n\n    const clickHandler = (color, visibility) => {\n        console.log(props.colorsArray);\n        console.log(color);\n        console.log(visibility);\n    }\n\n\n\n    return (\n        <div className={containerStyle.mainContainer}>\n            <div className={containerStyle.innerContainer}>\n                {Object.keys(props.colorsArray).map((key, index) => {\n                    return (\n                        <ColorSquare key={index}\n                            correctBtn={props.correctBtn}\n                            onClick={() => clickHandler(props.colorsArray[key].color, props.colorsArray[key].visibility)}\n                            backgroundColor={(props.makeVisibleAllSquares) ? props.correctBtn : props.colorsArray[key].color}\n                            setMakeVisibleAllSquares={props.setMakeVisibleAllSquares}\n                            makeVisibleAllSquares={props.makeVisibleAllSquares}\n                        />\n\n                    )\n                })}\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}