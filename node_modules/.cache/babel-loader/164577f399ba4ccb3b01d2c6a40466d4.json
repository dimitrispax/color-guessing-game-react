{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  _s();\n\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  // props.messageContainer(messageButtonData);\n  // props.playAgainContainer(playAgainButtonData);\n  // props.titleColorContainer(titleColorButtonData);\n  // console.log(titleColorButtonData);\n  // return (\n  //     <div className={containerStyle.mainContainer}>\n  //         <div className={containerStyle.upperRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn1\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn2\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn3\"\n  //             />\n  //         </div>\n  //         <div className={containerStyle.lowerRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn4\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn5\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn6\"\n  //             />\n  //         </div>\n  //     </div>\n  // );\n  const [visibility, setVisibility] = useState('visible');\n\n  const clickHandler = (color, data) => {\n    if (color === props.correctBtn) {\n      console.log(\"Egine!\");\n    } else {\n      console.log(\"Den egine!\"); // e.setVisibility('hidden');\n    }\n  };\n\n  const onClick = event => {\n    console.log(event.target.style);\n  };\n\n  \"colorsArray: \" + props.colorsArray;\n\n  for (var property in obj) {\n    alert(property + \"=\" + obj[property]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.colorsArray.map((row, index) => {\n      console.log(\"row: \" + row);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: row.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: containerStyle.btn,\n            onClick: onClick //, () => clickHandler(color)\n            ,\n            style: {\n              backgroundColor: `${data}`,\n              'visibility': data.visible\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(ColorsContainer, \"KahyASRim3cWQgJtkXeKAkzrUjk=\");\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","scryRenderedComponentsWithType","ColorButton","containerStyle","ColorsContainer","props","visibility","setVisibility","clickHandler","color","data","correctBtn","console","log","onClick","event","target","style","colorsArray","property","obj","alert","map","row","index","display","justifyContent","btn","backgroundColor","visible"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,8BAAT,QAA+C,sBAA/C;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,SAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAClC,QAAID,KAAK,KAAKJ,KAAK,CAACM,UAApB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAIH,KALD,MAKO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADG,CAGH;AACH;AACJ,GAXD;;AAaA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACH,GAFD;;AAIC,oBAAkBZ,KAAK,CAACa,WAAzB;;AACA,OAAI,IAAIC,QAAR,IAAoBC,GAApB,EAAyB;AACrBC,IAAAA,KAAK,CAACF,QAAQ,GAAG,GAAX,GAAiBC,GAAG,CAACD,QAAD,CAArB,CAAL;AACH;;AAED,sBACI;AAAA,cAEQd,KAAK,CAACa,WAAN,CAAkBI,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClCZ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUU,GAAtB;AACA,0BACI;AAAiB,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAxB;AAAA,kBACKH,GAAG,CAACD,GAAJ,CAAQ,CAACZ,IAAD,EAAOc,KAAP,KAAiB;AACtB,8BACI;AACI,YAAA,SAAS,EAAErB,cAAc,CAACwB,GAD9B;AAEI,YAAA,OAAO,EAAEb,OAFb,CAEuB;AAFvB;AAGI,YAAA,KAAK,EAAE;AAAEc,cAAAA,eAAe,EAAG,GAAElB,IAAK,EAA3B;AAA8B,4BAAcA,IAAI,CAACmB;AAAjD;AAHX,aAAUL,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL,SAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAfD;AAFR,mBADJ;AAqBH;;GAlHQpB,e;;KAAAA,e;AAoHT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\n\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n\n    // props.messageContainer(messageButtonData);\n    // props.playAgainContainer(playAgainButtonData);\n    // props.titleColorContainer(titleColorButtonData);\n\n    // console.log(titleColorButtonData);\n\n    // return (\n    //     <div className={containerStyle.mainContainer}>\n    //         <div className={containerStyle.upperRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn1\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn2\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn3\"\n    //             />\n    //         </div>\n    //         <div className={containerStyle.lowerRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn4\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn5\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn6\"\n    //             />\n    //         </div>\n    //     </div>\n    // );\n\n    const [visibility, setVisibility] = useState('visible');\n\n    const clickHandler = (color, data) => {\n        if (color === props.correctBtn) {\n            console.log(\"Egine!\");\n\n\n\n        } else {\n            console.log(\"Den egine!\");\n\n            // e.setVisibility('hidden');\n        }\n    }\n\n    const onClick = event => {\n        console.log(event.target.style);\n    }\n\n    (\"colorsArray: \" + props.colorsArray);\n    for(var property in obj) {\n        alert(property + \"=\" + obj[property]);\n    }\n\n    return (\n        <>\n            {\n                props.colorsArray.map((row, index) => {\n                    console.log(\"row: \" + row);\n                    return (\n                        <div key={index} style={{ display: 'flex', justifyContent: 'center' }}>\n                            {row.map((data, index) => {\n                                return (\n                                    <div key={index}\n                                        className={containerStyle.btn}\n                                        onClick={onClick}  //, () => clickHandler(color)\n                                        style={{ backgroundColor: `${data}`, 'visibility': data.visible }}>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })}\n        </>\n    )\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}