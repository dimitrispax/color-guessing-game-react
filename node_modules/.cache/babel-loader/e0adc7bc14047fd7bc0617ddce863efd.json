{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport TitleBar from \"./components/TitleBar\";\nimport ResultBar from \"./components/ResultBar\";\nimport ColorsContainer from \"./components/ColorsContainer\";\nimport titleStyle from './components/TitleBar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [messageContainerData, setMessageContainerData] = useState(\"\");\n  const [playAgainContainerData, setplayAgainContainerData] = useState(\"\");\n  const [titleColorContainerData, setTitleColorContainerData] = useState(\"\");\n  const [playAgainFlagData, setplayAgainFlagData] = useState();\n  let message = messageContainerData;\n  let buttonText = playAgainContainerData;\n  let titleColorApp = titleColorContainerData;\n  let playAgainFlag = playAgainFlagData;\n  const titleRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n      color: props.color,\n      titleColor: titleColorApp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultBar, {\n      message: message,\n      buttonText: buttonText,\n      playAgain: setplayAgainFlagData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorsContainer, {\n      messageContainer: setMessageContainerData,\n      playAgainContainer: setplayAgainContainerData,\n      titleColorContainer: setTitleColorContainerData,\n      color: props.color,\n      correctBtn: props.correctBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZYd5E3FDbEqW7gkixxiFTEHe4KY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/App.js"],"names":["useRef","useState","TitleBar","ResultBar","ColorsContainer","titleStyle","App","props","messageContainerData","setMessageContainerData","playAgainContainerData","setplayAgainContainerData","titleColorContainerData","setTitleColorContainerData","playAgainFlagData","setplayAgainFlagData","message","buttonText","titleColorApp","playAgainFlag","titleRef","color","correctBtn"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDR,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACS,sBAAD,EAAyBC,yBAAzB,IAAsDV,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACW,uBAAD,EAA0BC,0BAA1B,IAAwDZ,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,EAA1D;AAEA,MAAIe,OAAO,GAAGR,oBAAd;AACA,MAAIS,UAAU,GAAGP,sBAAjB;AACA,MAAIQ,aAAa,GAAGN,uBAApB;AACA,MAAIO,aAAa,GAAGL,iBAApB;AAEA,QAAMM,QAAQ,GAAGpB,MAAM,EAAvB;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEO,KAAK,CAACc,KAAvB;AAA8B,MAAA,UAAU,EAAEH;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEF,OAApB;AAA6B,MAAA,UAAU,EAAEC,UAAzC;AAAqD,MAAA,SAAS,EAAEF;AAAhE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAiB,MAAA,gBAAgB,EAAEN,uBAAnC;AAA4D,MAAA,kBAAkB,EAAEE,yBAAhF;AAA2G,MAAA,mBAAmB,EAAEE,0BAAhI;AAA4J,MAAA,KAAK,EAAEN,KAAK,CAACc,KAAzK;AAAgL,MAAA,UAAU,EAAEd,KAAK,CAACe;AAAlM;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQhB,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import { useRef, useState } from 'react';\n\nimport TitleBar from \"./components/TitleBar\";\nimport ResultBar from \"./components/ResultBar\";\nimport ColorsContainer from \"./components/ColorsContainer\";\nimport titleStyle from './components/TitleBar.module.css';\n\n\nfunction App(props) {\n\n  const [messageContainerData, setMessageContainerData] = useState(\"\");\n  const [playAgainContainerData, setplayAgainContainerData] = useState(\"\");\n  const [titleColorContainerData, setTitleColorContainerData] = useState(\"\");\n  const [playAgainFlagData, setplayAgainFlagData] = useState();\n\n  let message = messageContainerData;\n  let buttonText = playAgainContainerData;\n  let titleColorApp = titleColorContainerData;\n  let playAgainFlag = playAgainFlagData;\n\n  const titleRef = useRef();\n\n  return (\n    <div>\n      <TitleBar color={props.color} titleColor={titleColorApp} />\n      <ResultBar message={message} buttonText={buttonText} playAgain={setplayAgainFlagData} />\n      <ColorsContainer messageContainer={setMessageContainerData} playAgainContainer={setplayAgainContainerData} titleColorContainer={setTitleColorContainerData} color={props.color} correctBtn={props.correctBtn} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}