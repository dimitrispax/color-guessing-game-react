{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  _s();\n\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  // props.messageContainer(messageButtonData);\n  // props.playAgainContainer(playAgainButtonData);\n  // props.titleColorContainer(titleColorButtonData);\n  // console.log(titleColorButtonData);\n  // return (\n  //     <div className={containerStyle.mainContainer}>\n  //         <div className={containerStyle.upperRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn1\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn2\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn3\"\n  //             />\n  //         </div>\n  //         <div className={containerStyle.lowerRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn4\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn5\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn6\"\n  //             />\n  //         </div>\n  //     </div>\n  // );\n  const [visibility, setVisibility] = useState('visible');\n\n  const clickHandler = (e, color) => {\n    if (color === props.correctBtn) {\n      console.log(\"POW!\");\n      e.target.setVisibility();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.colorsArray.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: row.map((color, index) => {\n          // console.log(\"CorrectBtn at container: \" + props.correctBtn);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: containerStyle.btn,\n            onClick: () => clickHandler(color),\n            style: {\n              backgroundColor: `${color}`,\n              'visibility': visibility\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(ColorsContainer, \"KahyASRim3cWQgJtkXeKAkzrUjk=\");\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","scryRenderedComponentsWithType","ColorButton","containerStyle","ColorsContainer","props","visibility","setVisibility","clickHandler","e","color","correctBtn","console","log","target","colorsArray","map","row","index","display","justifyContent","btn","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,8BAAT,QAA+C,sBAA/C;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,SAAD,CAA5C;;AAEA,QAAMQ,YAAY,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC/B,QAAIA,KAAK,KAAKL,KAAK,CAACM,UAApB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAJ,MAAAA,CAAC,CAACK,MAAF,CAASP,aAAT;AAGH;AACJ,GAPD;;AASA,sBACI;AAAA,cACKF,KAAK,CAACU,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnC,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,kBACKH,GAAG,CAACD,GAAJ,CAAQ,CAACN,KAAD,EAAQQ,KAAR,KAAkB;AACvB;AACA,8BACI;AACI,YAAA,SAAS,EAAEf,cAAc,CAACkB,GAD9B;AAEI,YAAA,OAAO,EAAE,MAAMb,YAAY,CAACE,KAAD,CAF/B;AAGI,YAAA,KAAK,EAAE;AAAEY,cAAAA,eAAe,EAAG,GAAEZ,KAAM,EAA5B;AAA+B,4BAAcJ;AAA7C;AAHX,aAAUY,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SATA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH,KAfA;AADL,mBADJ;AAoBH;;GApGQd,e;;KAAAA,e;AAsGT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\nimport { scryRenderedComponentsWithType } from 'react-dom/test-utils';\n\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n\n    // props.messageContainer(messageButtonData);\n    // props.playAgainContainer(playAgainButtonData);\n    // props.titleColorContainer(titleColorButtonData);\n\n    // console.log(titleColorButtonData);\n\n    // return (\n    //     <div className={containerStyle.mainContainer}>\n    //         <div className={containerStyle.upperRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn1\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn2\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn3\"\n    //             />\n    //         </div>\n    //         <div className={containerStyle.lowerRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn4\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn5\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn6\"\n    //             />\n    //         </div>\n    //     </div>\n    // );\n\n    const [visibility, setVisibility] = useState('visible');\n\n    const clickHandler = (e, color) => {\n        if (color === props.correctBtn) {\n            console.log(\"POW!\");\n            e.target.setVisibility()\n\n\n        }\n    }\n\n    return (\n        <>\n            {props.colorsArray.map((row, index) => {\n                return (\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        {row.map((color, index) => {\n                            // console.log(\"CorrectBtn at container: \" + props.correctBtn);\n                            return (\n                                <div key={index}\n                                    className={containerStyle.btn}\n                                    onClick={() => clickHandler(color)}\n                                    style={{ backgroundColor: `${color}`, 'visibility': visibility }}>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}