{"ast":null,"code":"var _jsxFileName = \"/home/pax/Desktop/ReactProjects/color-guessing-game/src/components/ColorsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ColorButton from './ColorButton';\nimport colorStyle from './ColorsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  _s();\n\n  const [messageButtonData, setMessageButtonData] = useState(\"\");\n  const [playAgainButtonData, setPlayAgainButtonData] = useState(\"\");\n  let lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\n  let correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n\n  while (typeof correctBtn == 'undefined') {\n    correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n  }\n\n  console.log(\"Correct: \" + correctBtn);\n  props.messageContainer(messageButtonData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: colorStyle.mainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: colorStyle.upperRow,\n      children: [/*#__PURE__*/_jsxDEV(ColorButton, {\n        playAgainButton: setPlayAgainButtonData,\n        messageButton: setMessageButtonData,\n        correctBtn: correctBtn,\n        name: \"btn1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n        playAgainButton: setPlayAgainButtonData,\n        messageButton: setMessageButtonData,\n        correctBtn: correctBtn,\n        name: \"btn2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n        playAgainButton: setPlayAgainButtonData,\n        messageButton: setMessageButtonData,\n        correctBtn: correctBtn,\n        name: \"btn3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: colorStyle.lowerRow,\n      children: [/*#__PURE__*/_jsxDEV(ColorButton, {\n        setPlayAgainButton: setPlayAgainButtonData,\n        messageButton: setMessageButtonData,\n        correctBtn: correctBtn,\n        name: \"btn4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n        setPlayAgainButton: setPlayAgainButtonData,\n        messageButton: setMessageButtonData,\n        correctBtn: correctBtn,\n        name: \"btn5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n        setPlayAgainButton: setPlayAgainButtonData,\n        messageButton: setMessageButtonData,\n        correctBtn: correctBtn,\n        name: \"btn6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorsContainer, \"zK0/+vAFZYM3qV7WL8H4cYHQOFw=\");\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/pax/Desktop/ReactProjects/color-guessing-game/src/components/ColorsContainer.js"],"names":["useState","ColorButton","colorStyle","ColorsContainer","props","messageButtonData","setMessageButtonData","playAgainButtonData","setPlayAgainButtonData","lotteryArray","correctBtn","Math","floor","random","console","log","messageContainer","mainContainer","upperRow","lowerRow"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CN,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACO,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAC,EAAD,CAA9D;AAGA,MAAIS,YAAY,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,CAAnB;AACA,MAAIC,UAAU,GAAGD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAA7B;;AACA,SAAO,OAAOH,UAAP,IAAqB,WAA5B,EAAyC;AACrCA,IAAAA,UAAU,GAAGD,YAAY,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAD,CAAzB;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcL,UAA1B;AAGAN,EAAAA,KAAK,CAACY,gBAAN,CAAuBX,iBAAvB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAEH,UAAU,CAACe,aAA3B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEf,UAAU,CAACgB,QAA3B;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEV,sBAA9B;AAAsD,QAAA,aAAa,EAAEF,oBAArE;AAA2F,QAAA,UAAU,EAAEI,UAAvG;AAAmH,QAAA,IAAI,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEF,sBAA9B;AAAsD,QAAA,aAAa,EAAEF,oBAArE;AAA2F,QAAA,UAAU,EAAEI,UAAvG;AAAmH,QAAA,IAAI,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEF,sBAA9B;AAAsD,QAAA,aAAa,EAAEF,oBAArE;AAA2F,QAAA,UAAU,EAAEI,UAAvG;AAAmH,QAAA,IAAI,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAER,UAAU,CAACiB,QAA3B;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,kBAAkB,EAAEX,sBAAjC;AAAyD,QAAA,aAAa,EAAEF,oBAAxE;AAA8F,QAAA,UAAU,EAAEI,UAA1G;AAAsH,QAAA,IAAI,EAAC;AAA3H;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,kBAAkB,EAAEF,sBAAjC;AAAyD,QAAA,aAAa,EAAEF,oBAAxE;AAA8F,QAAA,UAAU,EAAEI,UAA1G;AAAsH,QAAA,IAAI,EAAC;AAA3H;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,kBAAkB,EAAEF,sBAAjC;AAAyD,QAAA,aAAa,EAAEF,oBAAxE;AAA8F,QAAA,UAAU,EAAEI,UAA1G;AAAsH,QAAA,IAAI,EAAC;AAA3H;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA/BQP,e;;KAAAA,e;AAiCT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport ColorButton from './ColorButton';\nimport colorStyle from './ColorsContainer.module.css';\n\nfunction ColorsContainer(props) {\n\n    const [messageButtonData, setMessageButtonData] = useState(\"\");\n    const [playAgainButtonData, setPlayAgainButtonData] = useState(\"\");\n\n\n    let lotteryArray = ['btn1', 'btn2', 'btn3', 'btn4', 'btn5', 'btn6'];\n    let correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n    while (typeof correctBtn == 'undefined') {\n        correctBtn = lotteryArray[Math.floor(Math.random() * 7)];\n    }\n    console.log(\"Correct: \" + correctBtn);\n\n\n    props.messageContainer(messageButtonData);\n\n\n    return (\n        <div className={colorStyle.mainContainer}>\n            <div className={colorStyle.upperRow}>\n                <ColorButton playAgainButton={setPlayAgainButtonData} messageButton={setMessageButtonData} correctBtn={correctBtn} name=\"btn1\" />\n                <ColorButton playAgainButton={setPlayAgainButtonData} messageButton={setMessageButtonData} correctBtn={correctBtn} name=\"btn2\" />\n                <ColorButton playAgainButton={setPlayAgainButtonData} messageButton={setMessageButtonData} correctBtn={correctBtn} name=\"btn3\" />\n            </div>\n            <div className={colorStyle.lowerRow}>\n                <ColorButton setPlayAgainButton={setPlayAgainButtonData} messageButton={setMessageButtonData} correctBtn={correctBtn} name=\"btn4\" />\n                <ColorButton setPlayAgainButton={setPlayAgainButtonData} messageButton={setMessageButtonData} correctBtn={correctBtn} name=\"btn5\" />\n                <ColorButton setPlayAgainButton={setPlayAgainButtonData} messageButton={setMessageButtonData} correctBtn={correctBtn} name=\"btn6\" />\n            </div>\n        </div>\n    );\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}