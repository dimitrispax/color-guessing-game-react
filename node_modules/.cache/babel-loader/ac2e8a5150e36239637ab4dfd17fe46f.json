{"ast":null,"code":"var _jsxFileName = \"/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ColorsContainer(props) {\n  _s();\n\n  // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n  // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n  // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n  // props.messageContainer(messageButtonData);\n  // props.playAgainContainer(playAgainButtonData);\n  // props.titleColorContainer(titleColorButtonData);\n  // console.log(titleColorButtonData);\n  // return (\n  //     <div className={containerStyle.mainContainer}>\n  //         <div className={containerStyle.upperRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn1\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn2\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn3\"\n  //             />\n  //         </div>\n  //         <div className={containerStyle.lowerRow}>\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn4\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn5\"\n  //             />\n  //             <ColorButton\n  //                 playAgainButton={setPlayAgainButtonData}\n  //                 messageButton={setMessageButtonData}\n  //                 titleColorButton={setTitleColorButtonData}\n  //                 color={props.color}\n  //                 correctBtn={props.correctBtn}\n  //                 name=\"btn6\"\n  //             />\n  //         </div>\n  //     </div>\n  // );\n  const [visibility, setVisibility] = useState('visible');\n\n  const clickHandler = (color, visibility) => {\n    if (color === props.correctBtn) {\n      console.log(\"Egine!\");\n    } else {\n      console.log(\"Den egine!\");\n      console.log(visibility);\n      visibility = 'hidden';\n    }\n  }; // const onClick = event => {\n  //     console.log(event.target.style);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(props.colorsArray).map((rowKey, index1) => {\n      console.log(\"rowKey: \" + props.colorsArray[rowKey]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: containerStyle.btn,\n            onClick: () => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visible),\n            style: {\n              backgroundColor: `${props.colorsArray[rowKey][key].color}`,\n              'visibility': props.colorsArray[rowKey][key].visible\n            }\n          }, index2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 37\n          }, this);\n        })\n      }, index1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(ColorsContainer, \"KahyASRim3cWQgJtkXeKAkzrUjk=\");\n\n_c = ColorsContainer;\nexport default ColorsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsContainer\");","map":{"version":3,"sources":["/home/nile/Desktop/color-guessing-game-react/src/components/ColorsContainer.js"],"names":["useState","ColorButton","containerStyle","ColorsContainer","props","visibility","setVisibility","clickHandler","color","correctBtn","console","log","Object","keys","colorsArray","map","rowKey","index1","display","justifyContent","key","index2","btn","visible","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,SAAD,CAA5C;;AAEA,QAAMO,YAAY,GAAG,CAACC,KAAD,EAAQH,UAAR,KAAuB;AACxC,QAAIG,KAAK,KAAKJ,KAAK,CAACK,UAApB,EAAgC;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAIH,KALD,MAKO;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACAA,MAAAA,UAAU,GAAG,QAAb;AACH;AACJ,GAXD,CAvE4B,CAoF5B;AACA;AACA;;;AAGA,sBACI;AAAA,cAGQO,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACU,WAAlB,EAA+BC,GAA/B,CAAmC,CAACC,MAAD,EAASC,MAAT,KAAoB;AACnDP,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaP,KAAK,CAACU,WAAN,CAAkBE,MAAlB,CAAzB;AACA,0BACI;AAAkB,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAzB;AAAA,kBACKP,MAAM,CAACC,IAAP,CAAYT,KAAK,CAACU,WAAN,CAAkBE,MAAlB,CAAZ,EAAuCD,GAAvC,CAA2C,CAACK,GAAD,EAAMC,MAAN,KAAiB;AACzD,8BACI;AACI,YAAA,SAAS,EAAEnB,cAAc,CAACoB,GAD9B;AAEI,YAAA,OAAO,EAAE,MAAMf,YAAY,CAACH,KAAK,CAACU,WAAN,CAAkBE,MAAlB,EAA0BI,GAA1B,EAA+BZ,KAAhC,EAAuCJ,KAAK,CAACU,WAAN,CAAkBE,MAAlB,EAA0BI,GAA1B,EAA+BG,OAAtE,CAF/B;AAGI,YAAA,KAAK,EAAE;AAAEC,cAAAA,eAAe,EAAG,GAAEpB,KAAK,CAACU,WAAN,CAAkBE,MAAlB,EAA0BI,GAA1B,EAA+BZ,KAAM,EAA3D;AAA8D,4BAAcJ,KAAK,CAACU,WAAN,CAAkBE,MAAlB,EAA0BI,GAA1B,EAA+BG;AAA3G;AAHX,aAAUF,MAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL,SAAUJ,MAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAaH,KAfD;AAHR,mBADJ;AAuBH;;GAhHQd,e;;KAAAA,e;AAkHT,eAAeA,eAAf","sourcesContent":["import { useState } from 'react';\n\nimport ColorButton from './ColorButton';\nimport containerStyle from './ColorsContainer.module.css';\n\nfunction ColorsContainer(props) {\n\n    // const [messageButtonData, setMessageButtonData] = useState(\"Select the correct color.\");\n    // const [playAgainButtonData, setPlayAgainButtonData] = useState(\"NEW COLORS\");\n    // const [titleColorButtonData, setTitleColorButtonData] = useState(\"rgb(28, 173, 173)\");\n\n    // props.messageContainer(messageButtonData);\n    // props.playAgainContainer(playAgainButtonData);\n    // props.titleColorContainer(titleColorButtonData);\n\n    // console.log(titleColorButtonData);\n\n    // return (\n    //     <div className={containerStyle.mainContainer}>\n    //         <div className={containerStyle.upperRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn1\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn2\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn3\"\n    //             />\n    //         </div>\n    //         <div className={containerStyle.lowerRow}>\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn4\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn5\"\n    //             />\n    //             <ColorButton\n    //                 playAgainButton={setPlayAgainButtonData}\n    //                 messageButton={setMessageButtonData}\n    //                 titleColorButton={setTitleColorButtonData}\n    //                 color={props.color}\n    //                 correctBtn={props.correctBtn}\n    //                 name=\"btn6\"\n    //             />\n    //         </div>\n    //     </div>\n    // );\n\n    const [visibility, setVisibility] = useState('visible');\n\n    const clickHandler = (color, visibility) => {\n        if (color === props.correctBtn) {\n            console.log(\"Egine!\");\n\n\n\n        } else {\n            console.log(\"Den egine!\");\n            console.log(visibility);\n            visibility = 'hidden';\n        }\n    }\n\n    // const onClick = event => {\n    //     console.log(event.target.style);\n    // }\n\n\n    return (\n        <>\n            {\n\n                Object.keys(props.colorsArray).map((rowKey, index1) => {\n                    console.log(\"rowKey: \" + props.colorsArray[rowKey]);\n                    return (\n                        <div key={index1} style={{ display: 'flex', justifyContent: 'center' }}>\n                            {Object.keys(props.colorsArray[rowKey]).map((key, index2) => {\n                                return (\n                                    <div key={index2}\n                                        className={containerStyle.btn}\n                                        onClick={() => clickHandler(props.colorsArray[rowKey][key].color, props.colorsArray[rowKey][key].visible)}\n                                        style={{ backgroundColor: `${props.colorsArray[rowKey][key].color}`, 'visibility': props.colorsArray[rowKey][key].visible }}>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )\n                })\n            }\n        </>\n    )\n}\n\nexport default ColorsContainer;"]},"metadata":{},"sourceType":"module"}